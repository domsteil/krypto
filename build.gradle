import org.jetbrains.dokka.gradle.DokkaTask

buildscript {
    ext.kotlin_version = '1.1.51'
    ext.dokka_version = '0.9.10'
    ext.bintray_version = '1.7.3'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'com.github.rs3vans.krypto'
version '2.0.0'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'junit:junit:4.2'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

dokka {
    linkMapping {
        dir = 'src/main/kotlin'
        url = 'https://github.com/rs3vans/krypto/master/tree/src/main/kotlin'
        suffix = '#L'
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['KryptoPublication']
    pkg {
        repo = 'maven'
        name = 'krypto'
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/rs3vans/krypto.git'
        version {
            name = project.version
            desc = 'Krypto - ' + project.version
            vcsTag = project.version
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
}

task dokkaDoc(type: DokkaTask) {
    outputFormat = 'html'
    outputDirectory = "docs"
}

task dokkaJavadoc(type: DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task dokkaJar(type: Jar, dependsOn: dokkaJavadoc) {
    from dokkaJavadoc.outputDirectory
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar, dokkaJar
}

assemble.dependsOn dokkaDoc

publishing {
    publications {
        KryptoPublication(MavenPublication) {
            from components.java
            groupId 'com.github.rs3vans.krypto'
            artifactId 'krypto'
            version project.version
            artifact sourcesJar
            artifact dokkaJar
        }
    }
}